// @generated by protoc-gen-es v1.10.0
// @generated from file chat.proto (package viamlabs.service.chat.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message viamlabs.service.chat.v1.ChatRequest
 */
export declare class ChatRequest extends Message<ChatRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  constructor(data?: PartialMessage<ChatRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viamlabs.service.chat.v1.ChatRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChatRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChatRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChatRequest;

  static equals(a: ChatRequest | PlainMessage<ChatRequest> | undefined, b: ChatRequest | PlainMessage<ChatRequest> | undefined): boolean;
}

/**
 * @generated from message viamlabs.service.chat.v1.ChatResponse
 */
export declare class ChatResponse extends Message<ChatResponse> {
  /**
   * @generated from field: string answer = 1;
   */
  answer: string;

  constructor(data?: PartialMessage<ChatResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viamlabs.service.chat.v1.ChatResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChatResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChatResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChatResponse;

  static equals(a: ChatResponse | PlainMessage<ChatResponse> | undefined, b: ChatResponse | PlainMessage<ChatResponse> | undefined): boolean;
}

