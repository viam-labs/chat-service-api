# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: chat.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import chat_pb2


class ChatServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Chat(self, stream: 'grpclib.server.Stream[chat_pb2.ChatRequest, chat_pb2.ChatResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/viamlabs.service.chat.v1.ChatService/Chat': grpclib.const.Handler(
                self.Chat,
                grpclib.const.Cardinality.UNARY_UNARY,
                chat_pb2.ChatRequest,
                chat_pb2.ChatResponse,
            ),
        }


class ChatServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Chat = grpclib.client.UnaryUnaryMethod(
            channel,
            '/viamlabs.service.chat.v1.ChatService/Chat',
            chat_pb2.ChatRequest,
            chat_pb2.ChatResponse,
        )
